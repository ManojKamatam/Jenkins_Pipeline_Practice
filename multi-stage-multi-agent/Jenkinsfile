pipeline {
    agent none  // No global agent; each stage will define its own Docker container
    stages {
        stage('Database Setup - MySQL') {
            agent {
                docker {
                    image 'mysql:latest'  // MySQL Docker image
                    args '-e MYSQL_ROOT_PASSWORD=root -p 3306:3306'  // Set root password and expose MySQL port
                }
            }
            steps {
                script {
                    sh 'echo "Setting up MySQL Database..."'
                    // Add DB setup commands here
                }
            }
        }
        stage('Frontend - Nginx') {
            agent {
                docker {
                    image 'nginx:latest'  // Nginx Docker image
                    args '-p 80:80'  // Expose port 80 for the web server
                }
            }
            steps {
                script {
                    sh 'echo "Setting up Nginx Frontend..."'
                    // Add frontend setup commands here
                }
            }
        }
        stage('Backend - Ubuntu') {
            agent {
                docker {
                    image 'ubuntu:latest'  // Ubuntu Docker image for backend
                    args '-v /var/lib/jenkins/workspace:/workspace'  // Mount workspace if needed
                }
            }
            steps {
                script {
                    sh 'echo "Building backend on Ubuntu container..."'
                    // Add backend build commands here
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
